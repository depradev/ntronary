:PROPERTIES:
:ID:       d4111671-7c82-4c5c-8631-378d7ecc64db
:END:
#+title: emacs
#+filetags: :20230628111929-emacs:ntronary:
- parent: [[id:d7915fca-1ef4-4b84-990b-1a9a7d376c4b][help]]
* SEARCH INFORMATION
- you would use a program like **rg** to look for regex matches like the artwork name
  - rg -i <text to serach> would return a case insensitive result
  - rg has an emacs package available too, so you can ==M-x rg==
* MOST USED FUNCTIONS
- org-roam-toggle-buffer (to see the backlinks)
- org-roam-node-find (for creating new nodes)
- org-roam-node-insert (to link to nodes)
- org-roam-tag-add (to add tags; node specific tags, NOT doujin-like ones)
* OPERATIONAL INFORMATION
The idea would be to:
git clone https://github.com/depradev/ntronary
as a folder inside your org-roam directory

Then you add this to your emacs config.el, to get a quick-creation way to create new notes inside that folder:

#+begin_src emacs-lisp :results output none
(setq org-roam-capture-templates
      '(
        ("d" "default" plain
         "%?"
         :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
         :unnarrowed t)
        ("p" "ntronary normal" plain
         "%?"
         ;; :if-new (file+head "ntronary/%<%Y%m%d%H%M%S>.org" "#+title: ${title}\n")
         :if-new (file+head "ntronary/nodes/%<%Y%m%d%H%M%S>.org" "#+title: d%<%Y%m%d%H%M%S>\n#+filetags: :%<%Y%m%d%H%M%S>:ntronary:\n- NAME\n* LINK\n")
         :unnarrowed t)
        ("a" "ntronary artist" plain
         "%?"
         ;; :if-new (file+head "ntronary/%<%Y%m%d%H%M%S>.org" "#+title: ${title}\n")
         :if-new (file+head "ntronary/nodes/%<%Y%m%d%H%M%S>.org" "#+title: oá´—o\n#+filetags: :%<%Y%m%d%H%M%S>:artist:ntronary:\n- NAME\n")
         :unnarrowed t)
        )
)
#+end_src
** LINKAGE
- it's reverse linkage, you would link to the previous (not the next) artwork
  - also the artist name
- this way there is no need to edit accient nodes
  - worry not, the org-roam-buffer (==a tool that should always be activated==), is the tool that allows you to find both the next artwork (if any) and the artist name
** THEMES
- Im using CAPITAL LETTERS to name the themes, so I can search them with rg just by using capitals
** TAGGING
- You ==link== to subjects, and ==tag== based on node properties
- Your tags are to be used to filter the node view. Independent of doujin tags.
- Considerations to follow:
  1. topics get a node, if you would like to get a list of backlinks to them
  2. if too many backlinks, consider hierarchization of nodes
  3. if its a feature of the artwork, consider a text descriptions instead, which enables regex search
  4. otherwise, you may consider a proper tag
